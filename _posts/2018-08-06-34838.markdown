---
layout: post
title: ?Fizzing up the new TLS security protocol
date: 2018-08-06 13:02:13
tourl: https://www.zdnet.com/article/fizzing-up-the-new-tls-security-protocol/
tags: [TLS,Source,Remote Services]
---
You may have noticed that Google's While TLS 1.3 is a step above TLS 1.2, it's not been widely deployed. A Now, with Facebook both supporting TLS 1.3 and releasing implementation as open-source, perhaps TLS 1.3 will finally become more popular. According toFacebook, Fizz is a robust, highly performant TLS library written in C++ 14. Besides TLS 1.3's built-in security advantages, Fizz offers an improved solution for middlebox handshake failures, supports asynchronous I/O by default, and can handle scatter/gather I/O to eliminate the need for extra copies of data. To make this happen, Facebook has worked with the Internet Engineering Task Force (IETF) to standardize TLS 1.3. Previously, Facebook improved TLS by deploying Facebook also claimed Fizz reduces memory and CPU uses. The net reduce is Facebook's load balancer synthetic benchmarks show approximately 10-percent higher throughput than our previous stack. The Fizz TLS 1.3 implementation also significantly reduces latency when establishing secure connections, compared with TLS 1.2. This improves user experience, particularly on app startup when there are no existing connections to reuse.Fizz also managed to improvement performance for a large distributed server network such as Facebook's by offloading certificate operations and ticket decryption to remote services. Fizz does this by usingThe new Fizz also supports APIs that can send early data immediately after the TCP connection is established. Early data reduces requests latency of. This is especially important when Of course, using early data potentially opens the door for attackers. Facebook's implementation of Fizz addresses this byusing a replay cache alongside the load balancers. This detects and rejects replayed data. Fizz provides simple APIs to be able to determine when transports are replay safe and can be used to send non-replay safe data.Another reason companies have avoided TLS 1.3 is network security appliance vendors made it impossible to update their firmware. While that makes them a bad choice for security, many businesses rely on them. That's a mistake. For example, Facebook addressed this in Fizz by making the first parts of the TLS 1.3 handshake look like the TLS 1.2 resumption handshake. With this approach, TLS 1.3 became reliably deployable with no fallback to TLS 1.2.This is working. According to Facebook, "Today, more than 50 percent of our internet traffic is secured with TLS 1.3, and that will continue to grow as browsers and apps add support for TLS 1.3. Now that Facebook has shown that that TLS 1.3 can be successfully deployed at scale and Google is making TLS a de facto business requirement, it's time to switch your sites, applications, and servers to TLS 1.3. And, with Fizz open source under the BSD license, you should consider using it for your business deployments. You'll be glad you did. 