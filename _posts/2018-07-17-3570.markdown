---
layout: post
title: '007' code helps stop Spectre exploits before they exist
date: 2018-07-17 01:02:15
tourl: /2018/07/17/spectre_protectors/
tags: [exploit,Exploitation,Attack]
---
Black hats haven't yet found a way to mass-exploit the Spectre vulnerability  but mitigations are already arriving.Beyond chip vendor and operating system patches, there remain reasons to seek out additional defences: there are still circumstances in which protective coverage is incomplete  and over in the world of Android phones, updates dribble out slowly.Be of good heart, sysadmins. At arXiv, Singaporean and US researchers have published work, appropriately Apvrille's work backs up what we've heard from other researchers: so far, Spectre exploitation is theoretical, with no exploits in the wild. She wrote that while there was a flurry of Spectre exploit stories based on AV-Test sample collection, it turned out that all of the reported samples were proofs-of-concept rather than genuine malware.She adds: there is a significant difference between a PoC of Spectre and a piece of malware using Spectre. Turning a PoC into a malicious executable is far from a trivial process.That doesn't make this kind of work pointless, though, since it's a good thing to stay ahead of whatever nasties black hats might devise.In developing a detection technique, Apvrille's second conclusion was also good news: an attack against Spectre, she found, seems relatively easy to detect.She wrote that we had expected several false positives with this signature, but that was not the case: this imperfect signature turns out to be quite good in practice.The signature Apvrille searched for (using the in-practice impracticably-slow technique of searching whole binaries) was to identify Flush+Reload cache attacks in ELF x86-64 executables.Although slow, that technique detected all of the viable samples in the proof-of-concept code gathered by AV-Test. Those that weren't successfully scanned, it turned out, wouldn't have worked anyway: they were all damaged: the cache flush instruction was missing.And there's yet more good news for Android users: all of the proof-of-concept samples so far identified are for x86-64 architectures, and code doesn't easily port from there to ARMv7 architectures.The paper that landed at arXiv also seeks to detect code that attacks Spectre, at a generic level the authors describe as a binary analysis framework to check and fix code snippets against potential vulnerability to Spectre attacks.Such things already exist, but the authors  Guanhua Wang, Tulika Mitra, and Abhik Roychoudhury from the National University of Singapore; Sudipta Chattopadhyay from the Singapore University of Technology and Design; and Ivan Gotovchits of Carnegie-Mellon University  explain that they impose heavy overheads, while their 007 framework imposed less than two per cent overhead, as measured by GNU Core Utilities.They also claim to have detected fourteen out of the fifteen Spectre vulnerable code patterns proposed by Paul Kocher, a feat that could not be achieved by the Spectre mitigation in C/C++ compiler proposed by Microsoft (Kocher was one of the In the abstract, the 007 crew says their approach includes: control flow extraction, taint analysis and address analysis to detect tainted conditional branches and their ability to impact memory accesses. Fixing is achieved by selectively inserting a small number of fences, instead of inserting fences after every conditional branch.The detection algorithm proposed in 007 is shown below (from the paper).The researchers note that their detection code is available on request from the National University of Singapore's Website. Ž