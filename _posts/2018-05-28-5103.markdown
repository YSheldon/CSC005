---
layout: post
title: Oracle Plans to Drop Java Serialization Support, the Source of Most Security Bugs
date: 2018-05-28 00:02:0
tourl: https://www.bleepingcomputer.com/news/security/oracle-plans-to-drop-java-serialization-support-the-source-of-most-security-bugs/
tags: [Group]
---
Oracle plans to drop support for data serialization/deserialization from the main body of the Java language, according to Mark Reinhold, chief architect of the Java platform group at Oracle.Serialization is the process of taking a data object and converting it into a stream of bytes (binary format), so it can be transported across a network or saved inside a database, only to be deserialized later and used in its original form.Because of its convenience, a large number of high-level programming languages support the feature but nowhere has it been more of a headache than in Java, where it's been at the heart of a constant stream of security flaws.Speaking to Reinhold says the Java team is currently working on dropping serialization support for good from the language's main body, but still provide developers with a plug-in system to support serialization operations if needed via a new framework.There's no set date or Java version when Oracle plans to drop serilization, Reinhold said.But until Oracle does this, companies and project leads that don't want a developer or a rogue module calling serialization/deserialization functions can prevent this via a "Attacks via serialization/deserialization operations have been known for years, in a form or other, but they became everyone's problem in early 2015 when two researchers  Chris Frohoff and Gabriel Lawrence  Researchers from Their experiments showed that an attacker could upload malicious data inside popular Java apps such as WebLogic, WebSphere, JBoss, Jenkins, and OpenNMS.  This data would be serialized and stored in a database or in memory, but when the app would deserialize it, the app would also execute additional malicious code.The flaw rocked the Java ecosystem in 2016, as it also affected That particular Java deserialization flaw was so dangerous that While Java serialization/deserialization security issues were known for a long time, the 2015 Java Apocalypse served as a wake-up call for many companies, and the Java community as a whole, who started paying more attention to how they serialize and later deserialize data.Reinhold told InfoWorld that serialization issues could be very easily responsible for a third or even a half of all known Java flaws.His assessment is most likely correct. For example, Oracle's January 2018 security updates fixed 237 vulnerabilities, of which The issue is also very widespread across companies. A Just one Apache Struts (Java) deserialization bug from last year But while Oracle is addressing the issue in Java, serialization also affects other programming environments like 