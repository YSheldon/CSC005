---
layout: post
title: ?OpenSSH arrives in Windows 10 Spring Update
date: 2018-05-17 00:02:13
tourl: https://www.zdnet.comhttps://www.zdnet.com/article/openssh-arrives-in-windows-10-spring-update/
tags: [Command-Line Interface,PowerShell,Private Keys]
---
Windows 10 is becoming a useful Unix/Linux sysadmin platform. First, it has incorporated It's taken a long time. Microsoft started work on Finally, though, you'll no longer need third-party SSH clients such as OpenSSH is commonly used with BSD, Linux, macOS, and Unix servers, but it can be used with any platform, including Windows 10, with a SSH server. This particular popular SSH client/server implementation is part of the Microsoft is deploying the latest client version of For full instructions on how to use this command-line interface program, check out the ssh [user]@[host] If it's your first connection to a particular SSH server, it will display the host key fingerprint and ask you to confirm that you want to connect. If you answer yes, the host key will be saved in the %UserProfile%.sshknown_hosts hidden file, and when next you connect to it, you won't be asked again. Next, you must enter the remote server's user account password. Once that's done, you're logged into the remote server, and you can program on it or run system administration tools. Once you're done type "exit". You'll then get the following message: "Connection to [server] closed." And you're back to your local command prompt.It's safer, however, to use key-based authentication. For that,you must first generate client public/private key pairs. From PowerShell or cmd, you do this by using ssh-keygen to generate the key files. This is done with the following commands:cd ~.sshssh-keygenWith my system, the output looks like:Generating public/private ed25519 key pair.Enter file in which to save the key (C:Userssjvn.sshid_ed25519):Next, you must move your public key (~.sshid_ed25519.pub) into a text file called authorized_keys in the directory ~.ssh on the remote server.Private keys are like your passwords. They must be protected. On Windows, you should shield your private keys by using the ssh-agent service, as the Administrator, and use ssh-add to store your private key. Then, whenever you need it for authentication, ssh-agent will automatically retrieve it and pass it to OpenSSH.Once set up, you'll be able to securely login into remote servers and transfer files to them. You're now ready to work on remote Unix/Linux systems. Enjoy.